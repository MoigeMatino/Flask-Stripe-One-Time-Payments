name: CI

on: [push]
  
jobs:
  tests:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: test_db
        options: >-
          --health-cmd="pg_isready -U postgres -d test_db"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose

      - name: Build and run Docker Compose
        run: |
          docker-compose up -d --build

      - name: Wait for services to be ready
        run: |
          docker-compose exec -T flask_app sh -c 'while ! nc -z localhost 5432; do sleep 1; done'

      - name: Run tests
        env:
          DATABASE_URL: postgres://postgres:password@localhost:5432/test_db
        run: |
          docker-compose exec -T flask_app pytest

      - name: Shut down Docker Compose
        if: always()
        run: |
          docker-compose down
